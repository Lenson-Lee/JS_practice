
/* reset */
a{
    color: inherit;
    text-decoration: none;
}

/* layout */
.wrapper {
    font-size: 18px;
    background: #8c8c8c;
    height: 100vh;
    position: relative;
}

section.main {
    width: 40%;
    background: #f6f6f6;
    border-radius: 10px;
    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.7);

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    overflow: hidden;
}

section.main .main-title {
    padding: 30px 20px;
    font-size: 30px;
    font-weight: 700;
    text-align: center;
    /* 섹션 메인을 라운드 줬던거여서 위에는 깎이지 않았지만 색이 없어서 몰랐던거. 
    여기서 또 깎으면 안쪽도 깎이니까 곤란. overflow-hidden으로 넘친거를 숨겨주자.*/
    background: #abe8ec;
    border-bottom: 1px solid #d3d3d3;
}
section.main .number-wrapper {
    padding: 50px 20px;
}
section.main .number-wrapper h2 {
    font-size: 22px;
    text-align: center;
    text-decoration: underline;
}
section.main .number-wrapper h2 em {
    font-size: 1.2em;
    font-weight: 700;
    color: rgb(231, 107, 114);
}
/* id자체는 워낙 점수가 높으니 따로 점수 안올려도 된다. */
#numbers {
    width: 70%;
    height: 400px;
    border: 1px solid rgb(99, 99, 99);
    border-radius: 10px;
    padding: 30px 50px;
    overflow: auto;
    margin: 30px auto;

    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-items: center;
    row-gap: 20px; 
    /* rowgap 말고 아이콘에 마진줘두 되긴 한다.. */
}

#numbers .icon {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    font-size: 32px;
    font-weight: 700;
    color: #fff;
    background: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

#numbers .icon:hover {
    opacity: 0.7;
    transform: scale(1.1);
}
/*  숫자 아이콘 배치방법 여러가지다. 
1. float 걸고 5번째에 clear
2. flex 주고 (wrap때문에 한 줄에 찌그러져서 나타남) flex-wrap: wrap으로 설정 후 마진right 주고 네 번쨰 마진은 지우기
3. grid로 손쉽고 빠르게 끝!*/

#numbers .icon:nth-child(4n - 3) {
    background: orange;
}
#numbers .icon:nth-child(4n - 2) {
    background: skyblue;
}
#numbers .icon:nth-child(4n - 1) {
    background: yellowgreen;
}
#numbers .icon:nth-child(4n) {
    background: orangered;
}



/* 애니메이션 */
.result {
/* 업다운을 감싸는 컨테이너 처리 */
    position: absolute;
    top: 50%;
    right: 20%;
    transform: translate(0%, -50%);
}

.result div {
/* 업다운을 감싸는 원 처리 */
    width: 150px;
    height: 150px;
    border-radius: 50%;
    font-size: 30px;
    font-weight: 700;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 30px;
    background: rgb(46, 46, 46);    
}
#up {
    background: red;
}
#down {
    background: blue;
}

.result div.selected {
    animation: jumping 0.3s infinite linear alternate;
}
/* alternate는 정방향 역방향 반복, infinite linear 균일하게 무제한 반복
    -> 애니메이션을 한 방향만 만들어도 상하로 움직임 */
@keyframes jumping {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
        
    }
    100% {
        transform: translateY(-20px);

    }
}

#finish {
    width: 60%;
    height: 200px;
    background: tomato;
    font-size: 80px;
    font-weight: 700;
    border-radius: 20px;
    text-align: center;
    line-height: 200px;
    color: #fff;
    /* display: flex;
    justify-content: center;
    align-items: center; */

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    /* 투명도만 낮추면 정답박스 위치의 숫자들이 클릭이 안되서 뒤로 보낼거다. */
    opacity: 0;
    z-index: -100;
}
#finish.show {
    animation: showUp 1s linear forwards;
}
@keyframes showUp {
    0% {
        opacity: 0;
        top: -50%;
    }
    50% {
        opacity: 0.5;
        top: 0;
    }
    100% {
        opacity: 1;
        top: 50%;
        z-index: 100;
    }
    /* 다 쓰고 웹 콘솔에 들어가서 클래스 show 수동으로 주고 확인해보면 슥 하고 퍽 사라짐
        -> 교안에 있는 fill-mode때문. fill모드는 기본으로 none 
        -> 기존위치에서 애니메이션 시작지점으로 이동-동작- 기존위치로 돌아감.(z인덱스 -100으로 돌아간다는 뜻)
        
        :::forwards 혹은 both? 주기*/
}

/* 정답아이콘에 id="move"가 붙으면 아이콘이 커지면서 움직이는 애니메이션*/
#move {
    position: absolute;
    left: 50%;
    top: 50%;
    z-index: 10;
    border: 4px dashed #000;
    animation: move 1s linear forwards;
}
@keyframes move {
    0% {
        top: 0;
        transform: translateX(0) rotate(0) scale(1);
    }
    100% {
        top: 10%;
        transform: translateX(-50) rotate(720deg) scale(2);
    }
}